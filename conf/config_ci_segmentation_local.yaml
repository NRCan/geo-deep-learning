# Deep learning configuration file ------------------------------------------------
# Five sections :
#   1) Global parameters; those are re-used amongst the next three operations (sampling, training and inference)
#   2) Sampling parameters
#   3) Training parameters
#   4) Inference parameters
#   5) Model parameters

# Global parameters

global:
  samples_size: 256
  num_classes: 1  # will automatically create a 'background' class
  data_path: ./data
  number_of_bands: 3
  model_name: checkpointed_unet     # One of unet, unetsmall, checkpointed_unet, ternausnet, fcn_resnet101, deeplabv3_resnet101
  bucket_name:   # name of the S3 bucket where data is stored. Leave blank if using local files
  task: segmentation  # Task to perform. Either segmentation or classification
  num_gpus: 0
  scale_data: [0,1]
  debug_mode: True

# Sample parameters; used in images_to_samples.py -------------------

sample:
  prep_csv_file: ./data/images_to_samples_ci_csv.csv
  overlap: 33
  min_annotated_percent: 10 # Min % of non background pixels in stored samples. Default: 0
  mask_reference: False

# Training parameters; used in train_segmentation.py ----------------------

training:
  state_dict_path:    # optional
  num_trn_samples:
  num_val_samples:
  num_tst_samples:
  batch_size: 4
  num_epochs: 2
  loss_fn: Lovasz # One of CrossEntropy, Lovasz, Focal, OhemCrossEntropy (*Lovasz for segmentation tasks only)
  optimizer: adam # One of adam, sgd or adabound
  learning_rate: 0.0001
  weight_decay: 0
  step_size: 4
  gamma: 0.9
  dropout: False    # (bool) Use dropout or not
  dropout_prob: False    # (float) Set dropout probability, e.g. 0.5
  class_weights: [1.0, 2.0]
  batch_metrics: 1
  ignore_index:  # Specifies a target value that is ignored and does not contribute to the input gradient
  augmentation:
    rotate_limit: 45
    rotate_prob: 0.5
    hflip_prob: 0.5

# Inference parameters; used in inference.py --------

inference:
  img_dir_or_csv_file: ./data/inference_sem_seg_ci_csv.csv
  state_dict_path: ./data/samples256_overlap33_min-annot10_3bands/model/config_ci_segmentation_local/checkpoint.pth.tar
  chunk_size: 512 # (int) Size (height and width) of each prediction patch. Default: 512
  overlap: 10 # (int) Percentage of overlap between 2 chunks. Default: 10
  heatmaps: True

# Visualization parameters

visualization:
  vis_batch_range: [0,200,10] #start, finish, increment
  vis_at_checkpoint: True
  vis_at_ckpt_min_ep_diff: 0
  vis_at_ckpt_dataset: val # FIXME: Parameter adds confusion. To be removed. Default to val dataset.
  vis_at_init: True
  vis_at_init_dataset: val
  vis_at_evaluation: True #val during training, tst at end of training
  vis_at_train: True
  grid: True
  heatmaps: True
  colormap_file: ./data/colormap.csv
